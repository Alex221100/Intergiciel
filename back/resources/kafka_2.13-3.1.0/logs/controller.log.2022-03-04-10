[2022-03-04 10:39:16,372] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@46f5f779, name=log4j:logger=kafka.controller (kafka.controller)
[2022-03-04 10:40:15,304] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-03-04 10:40:15,355] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2022-03-04 10:40:15,368] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(Enabled,Features{}) (kafka.controller.KafkaController)
[2022-03-04 10:40:15,421] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2022-03-04 10:40:15,435] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-03-04 10:40:15,443] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-03-04 10:40:15,451] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2022-03-04 10:40:15,470] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2022-03-04 10:40:15,481] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-03-04 10:40:15,488] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-03-04 10:40:15,502] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-03-04 10:40:15,502] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2022-03-04 10:40:15,503] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-03-04 10:40:15,504] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-03-04 10:40:15,505] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-03-04 10:40:15,510] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-03-04 10:40:15,511] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2022-03-04 10:40:15,511] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-03-04 10:40:15,512] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2022-03-04 10:40:15,513] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2022-03-04 10:40:15,532] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-03-04 10:40:15,534] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-03-04 10:40:15,555] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-03-04 10:40:15,555] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2022-03-04 10:40:15,555] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-03-04 10:40:15,557] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-03-04 10:40:15,563] INFO [RequestSendThread controllerId=0] Controller 0 connected to DESKTOP-UPO16BT.localdomain:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-03-04 10:40:15,564] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2022-03-04 10:40:15,564] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2022-03-04 10:40:15,600] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-03-04 10:40:15,600] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-03-04 10:40:15,600] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-03-04 10:40:15,601] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-03-04 10:40:15,602] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-03-04 10:40:15,632] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-03-04 10:40:20,637] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-03-04 10:40:20,637] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-03-04 10:45:20,680] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-03-04 10:45:20,680] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-03-04 10:50:20,728] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-03-04 10:50:20,728] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-03-04 10:55:20,758] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-03-04 10:55:20,758] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
