[2022-03-04 16:04:23,874] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-03-04 16:04:23,878] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-03-04 16:09:23,883] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-03-04 16:09:23,883] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-03-04 16:12:37,759] INFO [Controller id=0] New topics: [Set(Topic1)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(Topic1,Some(jdpSi0p4Qwel-Bkm4CTTyg),Map(Topic1-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-03-04 16:12:37,763] INFO [Controller id=0] New partition creation callback for Topic1-0 (kafka.controller.KafkaController)
[2022-03-04 16:12:37,905] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(izqRMbyiR2uI3t_6e7t5Fw),HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-03-04 16:12:37,906] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2022-03-04 16:12:38,014] INFO [RequestSendThread controllerId=0] Controller 0 connected to DESKTOP-UPO16BT.localdomain:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-03-04 16:14:23,899] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-03-04 16:14:23,899] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-03-04 16:14:23,902] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-03-04 16:14:23,903] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-03-04 16:19:23,918] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-03-04 16:19:23,918] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-03-04 16:19:23,919] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-03-04 16:19:23,920] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-03-04 16:24:23,925] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-03-04 16:24:23,925] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-03-04 16:24:23,927] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-03-04 16:24:23,927] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-03-04 16:29:23,929] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-03-04 16:29:23,929] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-03-04 16:29:23,930] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-03-04 16:29:23,930] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-03-04 16:34:23,943] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-03-04 16:34:23,943] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-03-04 16:34:23,944] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-03-04 16:34:23,944] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-03-04 16:39:23,948] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-03-04 16:39:23,948] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-03-04 16:39:23,949] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-03-04 16:39:23,950] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-03-04 16:44:23,951] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-03-04 16:44:23,951] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-03-04 16:44:23,952] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-03-04 16:44:23,952] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-03-04 16:49:23,967] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-03-04 16:49:23,967] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-03-04 16:49:23,968] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-03-04 16:49:23,968] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-03-04 16:53:08,292] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2022-03-04 16:53:08,292] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2022-03-04 16:53:08,293] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2022-03-04 16:53:08,300] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-17 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-5 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-1 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-41 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-49 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-29 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-25 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-37 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-11 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-23 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-19 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-7 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-47 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),Topic1-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-43 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-31 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-35 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2) (kafka.controller.KafkaController)
[2022-03-04 16:53:08,784] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@46f5f779, name=log4j:logger=kafka.controller (kafka.controller)
[2022-03-04 16:53:12,283] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-03-04 16:53:12,283] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-03-04 16:53:12,283] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-03-04 16:53:12,284] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2022-03-04 16:53:12,285] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-03-04 16:53:12,286] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-03-04 16:53:12,287] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-03-04 16:53:12,288] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-03-04 16:53:12,289] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-03-04 16:53:12,289] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-03-04 16:53:12,291] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2022-03-04 16:53:22,490] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-03-04 16:53:22,520] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 3 and epoch zk version is now 3 (kafka.controller.KafkaController)
[2022-03-04 16:53:22,523] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2022-03-04 16:53:22,529] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-03-04 16:53:22,534] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-03-04 16:53:22,536] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2022-03-04 16:53:22,552] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 175) (kafka.controller.KafkaController)
[2022-03-04 16:53:22,577] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-03-04 16:53:22,687] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-03-04 16:53:22,704] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2022-03-04 16:53:22,704] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-03-04 16:53:22,705] INFO [Controller id=0] Current list of topics in the cluster: HashSet(Topic1, __consumer_offsets) (kafka.controller.KafkaController)
[2022-03-04 16:53:22,705] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-03-04 16:53:22,706] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-03-04 16:53:22,719] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-03-04 16:53:22,719] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2022-03-04 16:53:22,719] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-03-04 16:53:22,720] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2022-03-04 16:53:22,721] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2022-03-04 16:53:22,743] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-03-04 16:53:22,753] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-03-04 16:53:22,795] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-03-04 16:53:22,796] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=40,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=0] -> OnlineReplica, [Topic=Topic1,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2022-03-04 16:53:22,796] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-03-04 16:53:22,797] INFO [RequestSendThread controllerId=0] Controller 0 connected to DESKTOP-UPO16BT.localdomain:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-03-04 16:53:22,800] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-03-04 16:53:22,802] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OnlinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, Topic1-0 -> OnlinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2022-03-04 16:53:22,802] INFO [Controller id=0] Ready to serve as the new controller with epoch 3 (kafka.controller.KafkaController)
[2022-03-04 16:53:22,818] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-03-04 16:53:22,818] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-03-04 16:53:22,819] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-03-04 16:53:22,819] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-03-04 16:53:22,820] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-03-04 16:53:22,864] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-03-04 16:53:27,867] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-03-04 16:53:27,868] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-03-04 16:53:27,872] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-03-04 16:53:27,873] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-03-04 16:58:27,881] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-03-04 16:58:27,881] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-03-04 16:58:27,882] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-03-04 16:58:27,882] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
